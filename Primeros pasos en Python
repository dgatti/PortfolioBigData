{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled5.ipynb",
      "provenance": [],
      "mount_file_id": "1JsT0VSOzwVG-chxVl_6t8RVGvWhOgXV9",
      "authorship_tag": "ABX9TyOEPzGchfToEt4zaS6apz3l",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/dgatti/PortfolioBigData/blob/main/Primeros%20pasos%20en%20Python\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sqiw-6PfjQCv"
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5PYsUlAcjVVa"
      },
      "source": [
        "## **Primeros pasos con Python**\n",
        "Cargar un DataSet y generar un pequeño gráfico"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qvjjekXsjRjb"
      },
      "source": [
        "datos=pd.read_excel(\"/content/drive/MyDrive/Curso Python/frutas.xlsx\")\n",
        "DF=pd.DataFrame(datos)"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "q6tlNLe4jyGq"
      },
      "source": [
        "for i in datos.index:\n",
        "  print(\"Peso fruta {} = {}\".format(i,datos['mass'][i])) #Probando .format para formatear el tipo de dato"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1VChc0iFj1uN"
      },
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nOBYN_yqj5Ic"
      },
      "source": [
        "ejex=np.array(datos['fruit_name'])\n",
        "ejey=np.array(datos['mass'])\n",
        "#ejey2=np.array(datos['color_score'])\n",
        "\n",
        "nombre_fruta=np.unique(datos['fruit_name'].values) #probando el .unique"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 268
        },
        "id": "hrPeiu5jkFH9",
        "outputId": "79760e4a-8f2f-4e93-af20-d0ba1dc7c8d4"
      },
      "source": [
        "ancho_barra=0.25\n",
        "plt.bar(ejex,ejey,width=ancho_barra,label='grafico1')\n",
        "#plt.bar(ejex+ancho_barra,ejey2,width=ancho_barra,label='grafico2') \n",
        "plt.ylabel('Peso')\n",
        "plt.grid(True)\n",
        "plt.legend()\n",
        "plt.ylim(1,500)\n",
        "plt.show()"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYUAAAD8CAYAAACYebj1AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAWxklEQVR4nO3dfZBcdb3n8fcXEk0kkJAQpqgkmtyVVdmbQMKAUcAdHtZSWQ2yAtcLl4DspqxVkALvClu31liutUiBCrrrkgXX6AWRvVEeguWaDUzJg1GeQgKEq5EHnRQQCCE4YoCQ7/7Rv5w0YUJ6wpzuTPJ+VXX1Ob/z69Pf+c3p/vQ5px8iM5EkCWCvThcgSdp1GAqSpIqhIEmqGAqSpIqhIEmqGAqSpEqtoRART0TEyohYHhH3lrbxEbEkIn5Xrvcv7RERV0bE6ohYERGz6qxNkvRG7dhTODYzD8vM7jJ/EbA0Mw8GlpZ5gI8CB5fLPOC7bahNktSkE4eP5gALy/RC4KSm9h9kwzJgXEQc1IH6JGmPNaLm9Sfwi4hI4KrMXAB0ZeZTZfnTQFeZngT8sem2faXtqaY2ImIejT0JRo8effiUKVNqLH+rzZs3s9denoJpN8e9/RzzzmjnuP/2t799LjMnDrSs7lA4OjPXRMSBwJKIeLR5YWZmCYyWlWBZANDd3Z333nvv0FX7Jnp7e+np6WnLfWkrx739HPPOaOe4R8ST21tWayxl5ppyvRb4KXAk8MyWw0Llem3pvgZoftk/ubRJktqktlCIiH0iYt8t08CHgYeAm4G5pdtc4KYyfTNwZnkX0mxgQ9NhJklSG9R5+KgL+GlEbLmf6zLz5xFxD3BDRJwDPAmcWvr/DPgYsBp4CTi7xtokSQOoLRQy8zHg0AHa1wHHD9CewOfqqkfS8Pfqq6/S19fHxo0bO13KkBs7diyrVq0a0nWOGjWKyZMnM3LkyJZvU/eJZkkaMn19fey7775MnTqVchRit/GnP/2Jfffdd8jWl5msW7eOvr4+pk2b1vLtfN+ZpGFj48aNTJgwYbcLhDpEBBMmTBj0XpWhIGlYMRBatzNjZShIkiqeU5A0bE296NYhXd8Tl5w4pOvb1ssvv8yJJ57Ic889x8UXX8ySJUu44IILOOSQQwa1nkcffZSzzz6b+++/n6997Wt88YtfHLIaDQVJGkKbNm1ixIiBn1ofeOABAJYvXw7AaaedtlP3MX78eK688kpuvPHGnSvyTXj4SJIG4atf/Srvec97OProo/n0pz/NZZddRk9PD+effz7d3d1cccUV3HLLLbz//e9n5syZnHDCCTzzzDOsXbuWM844g3vuuYfDDjuM3//+9/T09LDlq3qWLFnCrFmzOPTQQzn++Ma79p9//nlOOukkZsyYwezZs1mxYgUABx54IEccccSg3mraKvcUJKlF99xzD4sWLeLBBx/k1VdfZdasWRx++OEAvPLKK9UT/Pr161m2bBkRwdVXX82ll17K5ZdfztVXX81ll13G4sWLX7feZ599lvPOO4877riDadOm8fzzzwPw5S9/mZkzZ3LjjTdy2223ceaZZ1Z7GXUxFCSpRXfddRdz5sxh1KhRjBo1io9//OPVsuZDQX19fZx22mk89dRTvPLKKzv8nMCyZcv44Ac/WPUbP348AHfeeSeLFi0C4LjjjmPdunW8+OKL7LfffkP9p1U8fCRJQ2Cfffapps8991w+//nPs3LlSq666qph9QlsQ0GSWnTUUUdxyy23sHHjRvr7+99wGGiLDRs2MGnSJAAWLlw4YJ9ms2fP5u677+bxxx8HqA4fHXPMMVx77bVA46u1DzjggFr3EsDDR5KGsbrfQrqtI444gk984hPMmDGDrq4upk+fztixY9/Qb/78+Zxyyinsv//+HHfccdWT/fZMnDiRK664gpNPPpnNmzdz4IEHsmTJEubPn89nPvMZZsyYwTve8Y4qYJ5++mm6u7t58cUX2WuvvfjWt77FI488MiSBEY3voRue/JGd3Z/j3n678pivWrWK973vfR2tob+/nzFjxvDSSy/xoQ99iAULFjBr1qy3vN6h/u6jLQYas4i4LzO7B+rvnoIkDcK8efN45JFH2LhxI3Pnzh2SQNiVGAqSNAjXXXddp0uolSeaJQ0rw/mQd7vtzFgZCpKGjVGjRrFu3TqDoQVbfk9h1KhRg7qdh48kDRuTJ0+mr6+PZ599ttOlDLmNGzcO+gl8R7b88tpgGAqSho2RI0cO6lfEhpPe3l5mzpzZ6TI8fCRJ2spQkCRVDAVJUsVQkCRVDAVJUsVQkCRVDAVJUsVQkCRVDAVJUsVQkCRVDAVJUsVQkCRVDAVJUsVQkCRVDAVJUsVQkCRVag+FiNg7Ih6IiMVlflpE/DoiVkfEjyPibaX97WV+dVk+te7aJEmv1449hS8Aq5rmvw58MzPfDawHzint5wDrS/s3Sz9JUhvVGgoRMRk4Ebi6zAdwHPBPpctC4KQyPafMU5YfX/pLktqk7t9o/hbwn4B9y/wE4IXM3FTm+4BJZXoS8EeAzNwUERtK/+eaVxgR84B5AF1dXfT29tZZf6W/v79t96WtHPf2c8w7Y1cZ99pCISL+LbA2M++LiJ6hWm9mLgAWAHR3d2dPz5Ct+k319vbSrvvSVo57+znmnbGrjHudewpHAZ+IiI8Bo4D9gCuAcRExouwtTAbWlP5rgClAX0SMAMYC62qsT5K0jdrOKWTmxZk5OTOnAn8D3JaZpwO3A58q3eYCN5Xpm8s8ZfltmZl11SdJeqNOfE7hS8AFEbGaxjmDa0r7NcCE0n4BcFEHapOkPVrdJ5oByMxeoLdMPwYcOUCfjcAp7ahHkjQwP9EsSaoYCpKkiqEgSaoYCpKkiqEgSaoYCpKkiqEgSaoYCpKkiqEgSaoYCpKkSlu+5kJSZ0296NaW+144fRNnDaL/E5ecuDMlaRflnoIkqWIoSJIqhoIkqWIoSJIqhoIkqWIoSJIqhoIkqWIoSJIqhoIkqWIoSJIqhoIkqWIoSJIqhoIkqWIoSJIqhoIkqWIoSJIqhoIkqWIoSJIqhoIkqWIoSJIqhoIkqWIoSJIqhoIkqVJbKETEqIj4TUQ8GBEPR8RXSvu0iPh1RKyOiB9HxNtK+9vL/OqyfGpdtUmSBlbnnsLLwHGZeShwGPCRiJgNfB34Zma+G1gPnFP6nwOsL+3fLP0kSW1UWyhkQ3+ZHVkuCRwH/FNpXwicVKbnlHnK8uMjIuqqT5L0RrWeU4iIvSNiObAWWAL8HnghMzeVLn3ApDI9CfgjQFm+AZhQZ32SpNcbUefKM/M14LCIGAf8FHjvW11nRMwD5gF0dXXR29v7VlfZkv7+/rbdl7Zy3IfGhdM37bhT0TV6cP39/wyNXWVbrzUUtsjMFyLiduADwLiIGFH2BiYDa0q3NcAUoC8iRgBjgXUDrGsBsACgu7s7e3p62vAXNDb8dt2XtnLch8ZZF93act8Lp2/i8pWtPzU8cXrPTlSkbe0q23qd7z6aWPYQiIjRwL8BVgG3A58q3eYCN5Xpm8s8ZfltmZl11SdJeqM69xQOAhZGxN40wueGzFwcEY8A10fEfwUeAK4p/a8BfhgRq4Hngb+psTZJ0gBqC4XMXAHMHKD9MeDIAdo3AqfUVY8kacf8RLMkqWIoSJIqhoIkqWIoSJIqhoIkqWIoSJIqhoIkqdLy5xQi4lDgmDJ7R2Y+WE9JkqROaWlPISK+AFwLHFgu/xgR59ZZmCSp/VrdUzgHeH9m/hkgIr4O/Ar4dl2FSZLar9VzCgG81jT/WmmTJO1GWt1T+N/AryPipzTCYA5bv8hOkrSbaCkUMvMbEdELHF2azs7MB2qrSpLUES2FQkT8C+DhzLw/Io4FjomIxzPzhXrLkyS1U6vnFBYBr0XEu4H/SeMX0q6rrSpJUke0Ggqby89nngx8JzP/nsaP6EiSdiOthsKrEfFp4ExgcWkbWU9JkqROaTUUzgY+AHwtMx+PiGnAD+srS5LUCa2+++iRiPgS8M4y/zjw9ToLkyS1X6tfc/FxYDnw8zJ/WETcXGdhkqT2a/Xw0XzgSOAFgMxcDvxVTTVJkjqk5RPNmblhm7bNQ12MJKmzWv2ai4cj4m+BvSPiYOA84O76ypIkdUKrewrnAv8KeJnGh9Y2AOfXVZQkqTPedE8hIkYBnwXeDawEPlA+xCZJ2g3taE9hIdBNIxA+ClxWe0WSpI7Z0TmFQzJzOkBEXAP8pv6SJEmdsqM9hVe3THjYSJJ2fzvaUzg0Il4s0wGMLvMBZGbuV2t1kqS2etNQyMy921WIJKnzWn1LqiRpD9Dqh9ckSYMw9aJbB9X/wumbOGsQt3nikhMHW1JL3FOQJFUMBUlSxVCQJFVqC4WImBIRt0fEIxHxcER8obSPj4glEfG7cr1/aY+IuDIiVkfEioiYVVdtkqSB1bmnsAm4MDMPAWYDn4uIQ4CLgKWZeTCwtMxD42s0Di6XecB3a6xNkjSA2kIhM5/KzPvL9J+AVcAkYA6N71SiXJ9UpucAP8iGZcC4iDiorvokSW8UmVn/nURMBX4J/DXwh8wcV9oDWJ+Z4yJiMXBJZt5Zli0FvpSZ926zrnk09iTo6uo6/Prrr6+9foD+/n7GjBnTlvvSVo770Fi5ZtvfyNq+rtHwzF9aX/f0SWN3oqLd32DGHNo77scee+x9mdk90LLaP6cQEWOARcD5mfliIwcaMjMjYlCplJkLgAUA3d3d2dPTM4TVbl9vby/tui9t5bgPjcG8//3C6Zu4fGXrTw1PnN6zExXt/gYz5rDrjHut7z6KiJE0AuHazPxJaX5my2Ghcr22tK8BpjTdfHJpkyS1SZ3vPgrgGmBVZn6jadHNwNwyPRe4qan9zPIupNnAhsx8qq76JElvVOfho6OAvwNWRsTy0vafgUuAGyLiHOBJ4NSy7GfAx4DVwEvA2TXWNmw/gi5JdaotFMoJ49jO4uMH6J/A5+qqR5K0Y36iWZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUMRQkSRVDQZJUqS0UIuJ7EbE2Ih5qahsfEUsi4nflev/SHhFxZUSsjogVETGrrrokSdtX557C94GPbNN2EbA0Mw8GlpZ5gI8CB5fLPOC7NdYlSdqO2kIhM38JPL9N8xxgYZleCJzU1P6DbFgGjIuIg+qqTZI0sMjM+lYeMRVYnJl/XeZfyMxxZTqA9Zk5LiIWA5dk5p1l2VLgS5l57wDrnEdjb4Kurq7Dr7/++p2qbeWaDYPq3zUanvlL6/2nTxo7yIo0kP7+fsaMGdPpMoa9wWzvbutDY1d+jjn22GPvy8zugZaN2Om1vkWZmREx6ETKzAXAAoDu7u7s6enZqfs/66JbB9X/wumbuHxl68P1xOk9g6xIA+nt7WVn/8faajDbu9v60BiuzzHtfvfRM1sOC5XrtaV9DTClqd/k0iZJaqN2h8LNwNwyPRe4qan9zPIupNnAhsx8qs21SdIer7bDRxHxI6AHOCAi+oAvA5cAN0TEOcCTwKml+8+AjwGrgZeAs+uqS5K0fbWFQmZ+ejuLjh+gbwKfq6sWSVJrOnaiWXumqTtx8q3VE3ZPXHLizpQkqYlfcyFJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqSKoSBJqhgKkqRKZGana9hpEfEs8GSb7u4A4Lk23Ze2ctzbzzHvjHaO+7syc+JAC4Z1KLRTRNybmd2drmNP47i3n2PeGbvKuHv4SJJUMRQkSRVDoXULOl3AHspxbz/HvDN2iXH3nIIkqeKegiSpYihIkiqGwlsQEWdFxHc6XceeYGfGOiK6I+LKumqSthUR/Z2u4a0a0ekCpDpExIjMvBe4t9O17EoiImicS9zc6Vq0a9pj9xQi4saIuC8iHo6IeaWtPyK+WdqWRsTE0t4bEVdExPKIeCgijhxgfRMjYlFE3FMuR7X7b+qUiJgaEY9GxPcj4rcRcW1EnBARd0XE7yLiyHL5VUQ8EBF3R8R7ym3PioifRMTPS99Lm9Z7dlnfb4Cjmto/HhG/Luv6fxHRVdrnR8QPI+Iu4IcR0RMRi5uWfa/8Lx+LiPPaO0rtExEXlO30oYg4v/x//jkifgA8BEyJiO9GxL1lW/9K022fiIivRMT9EbEyIt5b2idGxJLS/+qIeDIiDijLzoiI35THx1URsXdn/vJdS0T8fXkuWLFljFt5rJR+48tz1IqIWBYRM0p7/dtxZu6RF2B8uR5N44EyAUjg9NL+X4DvlOle4H+V6Q8BD5Xps5r6XAccXabfCazq9N/YxrGcCmwCptN4oXEf8D0ggDnAjcB+wIjS/wRgUdMYPgaMBUbR+NqSKcBBwB+AicDbgLuaxnp/tr5z7t8Dl5fp+eW+R5f5HmBx07K7gbfT+DqBdcDITo9dDf+Lw4GVwD7AGOBhYCawGZg9wPa/d9m+Z5T5J4Bzy/R/BK4u098BLi7THymPlQOA9wG3bBlL4H8AZ3Z6HDo4/v3l+sM03mIa5TGxuDx37PCxUm7/beDLZfo4YHm7tuM9+fDReRHxyTI9BTiYxgPnx6XtH4GfNPX/EUBm/jIi9ouIcdus7wTgkMbeOQD7RcSYzBz2xxhb9HhmrgSIiIeBpZmZEbGSxgNhLLAwIg6m8YQysum2SzNzQ7ntI8C7aGzwvZn5bGn/MfAvS//JwI8j4iAagfF407puzsy/bKfGWzPzZeDliFgLdAF9b/Hv3tUcDfw0M/8MEBE/AY4BnszMZU39Ti17yCNoBPAhwIqybMt2fx9wctN6PwmQmT+PiPWl/XgaQXRP2fZHA2tr+LuGmw+XywNlfgyN55g/sOPHCjTG+98BZOZtETEhIvYry2rdjvfIUIiIHhpP4h/IzJciopfGq9Rt5XamB5rfi8YrsY1DVecw83LT9Oam+c00trOvArdn5icjYiqNV6cD3fY1drxdfhv4RmbeXP6X85uW/bnFGlu5n91JNS4RMQ34InBEZq6PiO/z+u1/yzi1MkYBLMzMi4ew1t1BAP8tM696XWNj29/RY2VHat2O99RzCmOB9SUQ3gvMLu17AZ8q038L3Nl0m9MAIuJoYMOWV7ZNfgGcu2UmIg6ro/BhbCywpkyf1UL/XwP/urxCGgmcsp11zR2yCncPdwAnRcQ7ImIfGq/u79imz340QmJDOR/z0RbWexdwKkBEfJjGITyApcCnIuLAsmx8RLzrrf8Zw97/BT4TEWMAImLSljFq0R3A6eW2PcBzmfnikFc5gD3plVKznwOfjYhVwD8DW3ar/wwcGRH/QGMX+LSm22yMiAdoHPb4zADrPA/47xGxgsa4/hL4bE31D0eX0jh89A/ArTvqnJlPRcR84FfAC8DypsXzgf9TDmHcBkwb8mqHqcy8v7zy/01puhpYv02fB8u2/CjwRxpP+DvyFeBHEfF3NP4nTwN/ysznyv/0FxGxF/Aq8Dna95X2u6TM/EVEvA/4VTms1g+cQeOVfSvmA98rzycv0cYXP37NRZOI6M/MMQO09wJfzMZbHKU9TkS8HXgtMzdFxAeA72ame8O7oT11T0HS4LwTuKHsDbwC/IcO16OauKcgSarsqSeaJUkDMBQkSRVDQZJUMRQkSRVDQZJU+f/ya735RdNZlAAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}